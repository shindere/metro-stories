* Améliorations possibles du calcul de distance entre l'adresse et les bouches
** Utiliser une bibliothèque externe qui tient mieux compte des positions GPS
  Mot-clef: geospatial library python
  Par exemple: python3-geojson
** Utiliser la distance à pieds plutôt qu'à vol d'oiseau

* Affichage des résultats
** Si une station n'a qu'une seule sortie, afficher "sortie unique"
** Affichage du nom des stations
  si la bouche fait partie d'un stop_area qui contient un public_transport=station ou un railway=station, alors prend le nom de cet objet
  sinon, si la bouche fait partie d'une stop_area qui a un nom, prend ce nom
  Note: une station est objet avec railway=station et/ou public_transport=station
Peut-être de façon optionnelle:

** N'afficher qu'une bouche par station
** Afficher uniquement des stations situées sur des lignes différentes
** Inclure arrêts de bus?
** Faire un affichage par colonnes pour les voyants

* Technique
** Voir si on peut diminuer le nombre de requêtes OverPass
** Améliorer affichage chaînes de caractères
*** Avec la méthode format, ou
*** Avec les fstrings f"Hello {name}"
** Utiliser un framework Python pour l'affichage et le ASGI/WSGI
** Utilisation bibliothèque python3-geojson (format retourné par la BAN et proposé par OverPass)

* Documentation

** Dans le code, ajouter en commentaries des liens vers les explications des clefs et des valeurs OSM que l'on utilise

** Dans le README, une section further readings
